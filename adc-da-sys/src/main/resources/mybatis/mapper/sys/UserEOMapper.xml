<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adc.da.sys.dao.UserEODao">
	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="com.adc.da.sys.entity.UserEO">
		<id column="usid" property="usid" />
		<result column="account" property="account" />
		<result column="valid_flag" property="validFlag" />
		<result column="password" property="password" />
		<result column="uname" property="uname" />
		<result column="r_extInfo" property="extInfo" />
		<result column="org_name" property="orgName" />
		<result column="email" property="email" />
		<result column="work_num" property="workNum" />
		<result column="creation_time" property="creationTime" />
		<result column="modify_time" property="modifyTime" />
		<result column="user_type" property="userType" />
		<result column="role_name" property="roleName" />
		<result column="role_id" property="roleId" />
		<result column="org_id" property="orgId" />
		<result column="oper_user" property="operUser" />
		<result column="disable_flag" property="disableFlag" />
		<result column="unlock_flag" property="unlockFlag" />
	</resultMap>

	<resultMap id="UserRoleMap" extends="BaseResultMap" type="com.adc.da.sys.entity.UserEO">
		<collection property="roleEOList" ofType="com.adc.da.sys.entity.RoleEO">
			<id column="id" property="id" />
			<result column="data_scope" property="dataScope" />
			<result column="r_validFlag" property="validFlag" />
			<result column="is_default" property="isDefault" />
			<result column="name" property="name" />
			<result column="remarks" property="remarks" />
			<result column="ext_Info" property="extInfo" />
			<result column="use_flag" property="useFlag" />
		</collection>
		<collection property="orgEOList" ofType="com.adc.da.sys.entity.OrgEO">
			<id column="org_id" property="id" />
			<result column="org_name" property="orgName" />
			<result column="org_desc" property="orgDesc" />
			<result column="org_code" property="orgCode" />
			<result column="org_type" property="orgType" />
			<result column="org_parent_id" property="parentId" />
			<result column="org_remarks" property="remarks" />
			<result column="org_isshow" property="isShow" />
			<result column="org_validFlag" property="validFlag" />
			<result column="org_parentIds" property="parentIds" />
		</collection>
	</resultMap>

	<!--liwenxuan:oper_user,user_source这两个字段为数据库新加的字段-->
	<!-- TS_USER table all fields -->
	<sql id="Base_Column_List">
		usid, account, valid_flag, password, uname, ext_info,email,work_num,creation_time,modify_time,oper_user,user_source,disable_flag,unlock_flag,user_type
	</sql>

	<!-- 获取用户组织机构及角色信息 -->
	<sql id="User_Role_List">
		u.*, r.id as id,
		r.valid_flag as r_validFlag,
		r.is_default as isDefault,
		r.name as name,
		r.remarks as remarks,
		r.ext_info as r_extInfo,
		ORG.id AS org_id,
		ORG.ORG_NAME AS org_name,
		ORG.ORG_DESC AS org_desc,
		ORG.ORG_CODE AS org_code,
		ORG.ORG_TYPE AS org_type,
		ORG.PARENT_ID AS org_parent_id,
		ORG.REMARKS AS org_remarks,
		ORG.IS_SHOW AS org_isshow,
		ORG.valid_flag AS org_validFlag,
		ORG.PARENT_IDS AS org_parentIds
	</sql>
	<!-- 查询条件 -->
	<sql id="Base_Where_Clause">
		where 1=1
		<trim suffixOverrides=",">
			<if test="usid != null">
				and usid ${usidOperator} #{usid}
			</if>
			<if test="account != null">
				and account ${accountOperator} #{account}
			</if>
			<if test="password != null">
				and password ${passwordOperator} #{password}
			</if>
			<if test="uname != null">
				and uname ${unameOperator} ${uname}
			</if>
			<if test="workNum != null" >
				and work_num ${workNumOperator} ${workNum}
			</if>
			<if test="validFlag != null">
				and valid_flag ${validFlagOperator} #{validFlag}
			</if>
			<if test="disableFlag != null">
				and disable_flag ${disableFlagOperator} #{disableFlag}
			</if>
			<if test="unlockFlag != null">
				and unlock_flag ${unlockFlagOperator} #{unlockFlag}
			</if>
			<if test="userType != null">
				and user_type ${userTypeOperator} #{userType}
			</if>
		</trim>
	</sql>
	<!-- 查询条件 -->
	<sql id="Base_Where_Clause_2">
		where 1=1
		<trim suffixOverrides=",">
			<if test="usid != null">
				and TU.usid ${usidOperator} #{usid}
			</if>
			<if test="account != null">
				and TU.account ${accountOperator} #{account}
			</if>
			<if test="password != null">
				and TU.password ${passwordOperator} #{password}
			</if>
			<if test="uname != null">
				and TU.uname ${unameOperator} ${uname}
			</if>
			<if test="workNum != null" >
				and TU.work_num ${workNumOperator} ${workNum}
			</if>
			<if test="validFlag != null">
				and TU.valid_flag ${validFlagOperator} #{validFlag}
			</if>
			<if test="disableFlag != null">
				and TU.disable_flag ${disableFlagOperator} #{disableFlag}
			</if>
			<if test="unlockFlag != null">
				and TU.unlock_flag ${unlockFlagOperator} #{unlockFlag}
			</if>
			<if test="userType != null">
				and TU.user_type ${userTypeOperator} #{userType}
			</if>
			<if test="orgId != null" >
				and TUO.ORG_ID ${orgIdOperator} #{orgId}
			</if>
		</trim>
	</sql>
	<!-- 修改用户密码 -->
	<update id="updatePassword">
		update TS_USER
		<set>
			password = #{newPassword}
		</set>
		where usid = #{userId}
	</update>

	<update id="updateUserEO" parameterType="com.adc.da.sys.entity.UserEO">
		update TS_USER
		<set>
			uname = #{uname}
		</set>
		where usid = #{usid}
	</update>
	<!-- 根据用户ID获取角色ID列表 -->
	<select id="getRoleIdListByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
		select role_id
		from TS_USER_ROLE ur
		where ur.user_id = #{usid}
	</select>
	<!-- 保存用户角色 -->
	<insert id="saveUserRole">
		insert into TS_USER_ROLE(user_id,role_id) values (#{usid}, #{roleId})
	</insert>
	<!-- 保存用户组织机构 -->
	<insert id="saveUserOrg">
		insert into TS_USER_ORG(user_id,org_id) values (#{usid}, #{orgId})
	</insert>
	<!-- 删除用户角色关联关系 -->
	<delete id="deleteUserRoleByUsid" parameterType="java.lang.String">
		delete from
		TS_USER_ROLE
		where user_id = #{usid}
	</delete>
	<!-- 删除用户组织机构关系 -->
	<delete id="deleteUserOrgByUsid" parameterType="java.lang.String">
		delete from
		TS_USER_ORG
		where user_id = #{usid}
	</delete>
	<!-- 批量删除用户信息 -->
	<update id="deleteLogicInBatch" parameterType="java.util.List">
		update TS_USER
		set valid_flag = 1
		where usid in
		<foreach item="usid" collection="list" open="(" separator=","
				 close=")" index="index">
			#{usid}
		</foreach>
	</update>
	<!-- 批量删除用户与角色关联关系 -->
	<delete id="deleteUserRoleByUsidInBatch" parameterType="java.util.List">
		delete from TS_USER_ROLE
		where user_id in
		<foreach item="usid" collection="list" open="(" separator=","
				 close=")" index="index">
			#{usid}
		</foreach>
	</delete>
	<!-- 批量删除用户与组织机构关联关系 -->
	<delete id="deleteUserOrgByUsidInBatch" parameterType="java.util.List">
		delete from TS_USER_ORG
		where user_id in
		<foreach item="usid" collection="list" open="(" separator=","
				 close=")" index="index">
			#{usid}
		</foreach>
	</delete>
	<!-- 根据账户获取用户信息 -->
	<select id="getUserEOByAccount" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from TS_USER
		where account = #{account} AND valid_flag=0
	</select>
	<!-- 根据用户ID获取用户信息及角色、组织机构信息 -->
	<select id="getUserWithRoles" resultMap="UserRoleMap" parameterType="java.lang.String">
		select <include refid="User_Role_List" />
		from TS_USER u
		left join TS_USER_ROLE ur on u.usid = ur.user_id
		left join TS_ROLE r on ur.role_id = r.id
		left join TS_USER_ORG UORG on u.usid = UORG.user_id
		left join TS_ORG ORG on UORG.org_id = ORG.id
		where u.usid = #{id}
	</select>

	<!-- 根据角色ID获取所有用户 -->
	<select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from TS_USER u

		left join TS_USER_ROLE ur
		on u.usid = ur.role_id
		where ur.role_Id = #{id}
	</select>

	<!-- 插入记录 -->
	<insert id="insert" parameterType="com.adc.da.sys.entity.UserEO">
		insert into TS_USER(
		<include refid="Base_Column_List" />
		)
		values (#{usid}, #{account}, #{validFlag}, #{password}, #{uname}, #{extInfo},#{email},#{workNum},#{creationTime},#{modifyTime},#{operUser},#{userSource},#{disableFlag},#{unlockFlag},#{userType})
	</insert>


	<!-- 根据pk，修改记录 -->
	<update id="updateByPrimaryKey" parameterType="com.adc.da.sys.entity.UserEO">
		update TS_USER
		set account = #{account},
		valid_flag = #{validFlag},
		password = #{password},
		uname = #{uname},
		where usid = #{usid}
	</update>

	<!-- 修改记录，只修改只不为空的字段 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.adc.da.sys.entity.UserEO">
		update TS_USER
		<set>
			<if test="uname != null">
				uname = #{uname},
			</if>
			<if test="account != null">
				account = #{account},
			</if>
			<if test="password != null and password != ''">
				password = #{password},
			</if>
			<if test="workNum != null" >
				work_num = #{workNum},
			</if>
			<if test="email != null" >
				email = #{email},
			</if>
			<if test="modifyTime != null" >
				modify_time = #{modifyTime},
			</if>
			<if test="extInfo != null" >
				ext_info = #{extInfo},
			</if>
			<if test="disableFlag != null">
				disable_flag = #{disableFlag},
			</if>
			<if test="unlockFlag != null">
				unlock_flag = #{unlockFlag},
			</if>
			<if test="userType != null">
				user_type = #{userType}
			</if>
		</set>
		where usid = #{usid}
	</update>

	<!-- 重置密码 -->
	<update id="updatePasswordByPrimaryKey" parameterType="com.adc.da.sys.entity.UserEO">
		update TS_USER
		set
			password = #{password}
		where usid = #{usid}
	</update>

	<!-- 根据id查询 TS_USER -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from TS_USER
		where usid = #{value}
	</select>

	<!-- 删除记录 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from TS_USER
		where usid = #{value}
	</delete>

	<!-- TS_USER 列表总数 -->
	<select id="queryByCount" resultType="java.lang.Integer" parameterType="com.adc.da.base.page.BasePage">
		select count(usid) from TS_USER
		<include refid="Base_Where_Clause" />
	</select>

	<!-- 查询TS_USER列表 -->
	<select id="queryByPage" resultMap="UserRoleMap" parameterType="com.adc.da.base.page.BasePage">
		SELECT
		<include refid="Base_Column_List" />
		FROM(
		SELECT
		tmp_user.*, ROWNUM rn
		FROM(
		SELECT * FROM TS_USER <include refid="Base_Where_Clause"/>
		) tmp_user
		WHERE
		ROWNUM  &lt;= ${pager.endIndex}
		)
		WHERE
		rn  &gt;= ${pager.startIndex}
	</select>

	<!-- 用户管理列表总数 -->
	<select id="queryUserInfoByCount" resultType="java.lang.Integer" parameterType="com.adc.da.base.page.BasePage">
		SELECT count(tu.usid)
		FROM
		TS_USER tu
		LEFT JOIN TS_USER_ROLE tur ON TU.USID = TUR.USER_ID
		LEFT JOIN TS_USER_INFO tui ON tu.usid = tui.user_id
		LEFT JOIN TS_USER_ORG tuo ON tu.usid = tuo.user_id
		LEFT JOIN TS_ROLE tr ON tr. ID = tur.role_id
		LEFT JOIN TS_ORG tor ON tor. ID = tuo.org_id
		<include refid="Base_Where_Clause_2" />
	</select>

	<!-- 查询用户管理列表 -->
	<select id="queryUserInfoByPage" resultMap="BaseResultMap" parameterType="com.adc.da.base.page.BasePage">
		SELECT * FROM(
			SELECT temp_user.*, ROWNUM rn
			FROM(
				SELECT
				TU.usid,TU.USER_TYPE,TU."ACCOUNT",TU.UNAME,TU.EMAIL,TU.WORK_NUM,
				tu.modify_time,tr.NAME AS ROLE_NAME,tui.mobile_phone,tui.office_phone,
				tor.org_name,tuo.ORG_ID,tur.ROLE_ID
				FROM TS_USER tu
				LEFT JOIN TS_USER_ROLE tur ON TU.USID = TUR.USER_ID
				LEFT JOIN TS_USER_INFO tui ON tu.usid = tui.user_id
				LEFT JOIN TS_USER_ORG tuo ON tu.usid = tuo.user_id
				LEFT JOIN TS_ROLE tr ON tr. ID = tur.role_id
				LEFT JOIN TS_ORG tor ON tor. ID = tuo.org_id
				<include refid="Base_Where_Clause_2" />
			) temp_user
		WHERE ROWNUM &lt;= ${pager.endIndex} )
		WHERE rn &gt;= ${pager.startIndex}
	</select>

	<!-- 根据条件获取列表 -->
	<select id="queryByList" resultMap="BaseResultMap" parameterType="com.adc.da.base.page.BasePage">
		select <include refid="Base_Column_List"/> from TS_USER
		<include refid="Base_Where_Clause"/>
		<if test="pager.orderCondition != null and pager.orderCondition != ''" >
			${pager.orderCondition}
		</if>
	</select>

	<!--根据当前登录用户id查询个人信息及部门-->
	<select id="selectOrgByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
			TU.*,ORG.ORG_NAME
		FROM
			TS_USER_ORG TUO
		LEFT JOIN TS_USER tu ON TUO.USER_ID = TU.USID
		LEFT JOIN TS_ORG ORG ON ORG.ID=TUO.ORG_ID
		WHERE TUO.USER_ID =#{value} AND TU.VALID_FLAG=0
	</select>

	<!--根据当前登录用户id查询它所对应的组织机构的个数-->
	<select id="selectOrgCountByPrimaryKey" resultType="java.lang.Integer" parameterType="java.lang.String">
		SELECT
		COUNT(1)
		FROM
		TS_USER_ORG TUO
		WHERE TUO.USER_ID =#{value}
	</select>

	<!--根据当前登录用户id查询个人角色信息-->
	<select id="selectRoleMessageByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
			TU.*,TR.NAME role_name
		FROM
			TS_USER_ROLE TUR
		LEFT JOIN TS_USER TU ON TU.USID = TUR.USER_ID
		LEFT JOIN TS_ROLE TR ON TR. ID = TUR.ROLE_ID
		WHERE TUR.USER_ID =#{value} AND TU.VALID_FLAG=0
	</select>

	<!-- 根据 orgid 查询用户 -->
	<select id="queryByOrgCount" resultType="java.lang.Integer" parameterType="com.adc.da.base.page.BasePage">
		SELECT
		COUNT(TU.USID)
		FROM
		TS_USER_ORG TUO
		LEFT JOIN TS_USER TU ON TU.USID = TUO.USER_ID
		LEFT JOIN TS_USER_ROLE TUR ON TU.USID = TUR.USER_ID
		LEFT JOIN TS_ROLE TR ON TR.ID=TUR.ROLE_ID
		LEFT JOIN TS_ORG ORG ON ORG.ID=TUO.ORG_ID
		<include refid="Base_Where_Clause_2"/>
	</select>
	<select id="queryByOrg" resultMap="BaseResultMap" parameterType="com.adc.da.base.page.BasePage">
		SELECT * FROM (
		SELECT TMP_USER.*,ROWNUM RN FROM (
		SELECT
		TU.*,TR.NAME ROLE_NAME,ORG.ORG_NAME
		FROM
		TS_USER_ORG TUO
		LEFT JOIN TS_USER TU ON TU.USID = TUO.USER_ID
		LEFT JOIN TS_USER_ROLE TUR ON TU.USID = TUR.USER_ID
		LEFT JOIN TS_ROLE TR ON TR.ID=TUR.ROLE_ID
		LEFT JOIN TS_ORG ORG ON ORG.ID=TUO.ORG_ID
		<include refid="Base_Where_Clause_2"/>
		) TMP_USER
		WHERE ROWNUM &lt;= ${pager.endIndex}
		) WHERE RN &gt;= ${pager.startIndex}
	</select>


	<!-- 根据原始密码修改密码  -->
	<select id="selectByUnameAndPwd" resultMap="BaseResultMap"
			parameterType="com.adc.da.sys.entity.UserEO">
		select TS_USER.* ,SYS_CORP.CORP_NAME as corpName,SYS_CORP.CORP_TYPE AS  type
		from TS_USER  LEFT JOIN TR_USER_ORG  ON  TS_USER.USID = TR_USER_ORG.USER_ID
			  LEFT JOIN  TS_ORG   ON  TR_USER_ORG.ORG_ID = TS_ORG.ID
			  LEFT JOIN  SYS_CORP  ON  SYS_CORP.ID = TS_ORG.CORP_ID
		where TS_USER.valid_flag = 0 and account = #{account}
	</select>

	<!--查找未分配组织结构的用户的行数-->
	<select id="findBySetOrgCount" resultType="java.lang.Integer"
			parameterType="com.adc.da.base.page.BasePage">
		SELECT count(1)
		FROM TS_USER tu
		LEFT JOIN TS_USER_ORG tuo ON tuo.user_id = tu.usid
		WHERE tu.valid_FLAG = '0' AND tuo.user_id is null
	</select>

	<!--查询所有未分配组织结构的用户-->
	<select id="findBySetOrg"  resultMap="UserRoleMap"
			parameterType="com.adc.da.base.page.BasePage">
		SELECT * FROM
		(SELECT  tmp_tb.* , rownum rn FROM
		(SELECT tu.usid, tu.uname, tu.account, tu.work_num AS workNum, tu.email,
		tu.modify_time AS modifyTime,
		torg.org_Name,
		tr.name,tr.use_flag
		FROM TS_USER tu
		LEFT JOIN TS_USER_ORG tuo ON tuo.user_id = tu.usid
		LEFT JOIN TS_ORG torg ON  torg.id = tuo.org_id
		LEFT JOIN TS_USER_ROLE tur ON tur.user_id = tu.usid
		LEFT JOIN TS_ROLE    tr ON tr.id = tur.role_id
		WHERE tu.VALID_FLAG = 0 AND tuo.user_id is null
		order by tu.modify_time desc
		) tmp_tb WHERE rownum &lt;= ${pager.endIndex}
		) WHERE rn &gt;= ${pager.startIndex}
	</select>
</mapper>
