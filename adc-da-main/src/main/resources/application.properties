# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.driverClassName = oracle.jdbc.OracleDriver
spring.datasource.url = jdbc:oracle:thin:@192.168.1.149:1521:ORCL
#开发外网库
#spring.datasource.url = jdbc:oracle:thin:@120.52.179.76:1521:ORCL
spring.datasource.username = CAQCDB
spring.datasource.password = 1q2w3e4r
#测试库
#spring.datasource.url = jdbc:oracle:thin:@120.52.179.76:1521:ORCL
#spring.datasource.username = PARTSALES
#spring.datasource.password = 123456


spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize = 5
spring.datasource.minIdle = 5
spring.datasource.maxActive = 20
# 配置获取连接等待超时的时间
spring.datasource.maxWait = 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis = 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.validationQuery= 'SELECT 1 FROM DUAL'
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements = true
spring.datasource.maxPoolPreparedStatementPerConnectionSize = 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters = stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties = 'druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000'
# 合并多个DruidDataSource的监控数据
#useGlobalDataSourceStat: true
spring.datasource.mergeSql=true
spring.datasource.slowSqlMillis=5000
spring.datasource.logSlowSql=true

# ===============================
#update dufaut embedded tomcat port
#server.port=8081

# mybatis_config
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath*:mybatis/mapper/**/*.xml

#显示sql
spring.profiles.active=dev
logging.level.com.adc=DEBUG
logging.level.org.hibernate=info
logging.level.org.springframework=info

# 系统日志类别dev:开发模式不拦截方法记日志, custom:客户自定义需要拦截记日志的方法, sys:系统原设需要拦截记日志的方法
sysLogType=dev

adminPath=/a
restPath=/api

#项目启动端口号
project.port = 8888
server.connection-timeout =18000000
server.port = 8888
server.servlet.session.timeout =1800
#session超时时间 单位:秒
shiro.session = 1800
# file模块上传文件的服务器地址
file.path=D:/CAQCFILE/QRCODEFILES

# 二维码背景图存储路径
QRCode.backgroundFile=D:/CAQCFILE
#二维码存储二维码URL
QRCode.dataUrl=http://120.52.179.78/html/mobile-manage/mobile-manage.html
#二维码配置级别：high:1---low:7
QRCode.configLevel=7
#机构网站
AppInfo.url=www.caqc.org
AppInfo.phone=022-8437933

appPath =/app
#app接口请求超时时间(毫秒)
app.timeOut = 60000

spring.http.multipart.max-request-size=20MB
spring.http.multipart.max-file-size=20MB

#rabbitMQ
#内网
spring.rabbitmq.host=192.168.1.200
#外网76
#spring.rabbitmq.host=120.52.179.76
#外网78
#spring.rabbitmq.host=120.52.179.78
spring.rabbitmq.port=5673
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.publisher-confirms=true

#redis
# Redis服务器地址
#spring.redis.host=221.239.111.146
# Redis服务器连接端口
#spring.redis.port=15777
# Redis服务器连接密码（默认为空）
#spring.redis.password=cvdecs

#线程池
core.pool.size=10
max.pool.size=30
keep.alive.seconds=60
queue.capacity=8

#elastic search
#clusterName=elasticsearch
#clusterNodes=10.10.0.3:9300

#activiti 配置
spring.activiti.database-schema-update=true
spring.activiti.check-process-definitions=false

#elasticsearch 配置
elasticsearch.clustername=wali
elasticsearch.ip=127.0.0.1
elasticsearch.port=9300
elasticsearch.poolSize=5
